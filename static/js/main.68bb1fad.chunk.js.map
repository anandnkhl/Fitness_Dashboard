{"version":3,"sources":["components/Auth/loading.svg","components/Graphs/LineChart.js","components/Auth/Callback.js","components/Auth/Login.js","components/Auth/LogoutBtn.js","components/Header.js","components/Graphs/GraphUtils.js","components/Graphs/BarGraph.js","components/Graphs/PieChart.js","components/MyStepsCount.js","components/SubscriptionClient.js","components/MyWaterConsumption.js","components/MyInfoQuery.js","components/App.js","components/Auth/react-auth0-spa.js","utils/history.js","serviceWorker.js","index.js"],"names":["module","exports","Callback","className","src","loading","alt","Login","useAuth0","loginWithRedirect","Button","id","variant","onClick","LogoutBtn","logoutHandler","Header","data","i","newUserData","push","LineChart","unit","window","screen","width","margin","top","bottom","left","right","xMin","xMax","yMin","yMax","xAxis","d","yAxis","xScale","scaleBand","range","domain","map","nice","yScale","scaleLinear","style","justifyContent","display","height","x","y","LinearGradient","from","to","vertical","GridRows","scale","numTicks","AxisBottom","hideAxisLine","hideTicks","tickLabelProps","value","index","fontSize","textAnchor","fill","fillOpacity","fontStyle","AxisLeft","fontFamily","labelProps","label","labelOffset","Area","stroke","strokeWidth","curve","curveMonotoneX","AreaClosed","getRoundedRect","radius","side","t_w","b_w","h","Y","BarGraph","props","barWidth","borderRad","week","rangeRound","compose","accessor","xPoint","yPoint","waterLtr","GridColumns","x1","x2","y1","y2","hideZero","verticalAnchor","barHeight","Group","key","delay","config","duration","bandwidth","PieChart","Math","min","translationPosition","String","radiusOuterGradient","radiusOuterGrey","fontSizeNumber","centerY","transform","text-anchor","fontWeight","floor","Pie","outerRadius","innerRadius","padAngle","cornerRadius","pieSort","pie","arcs","arc","path","MyStepsCount","idToken","useSubscription","gql","error","console","stepsCountDisplay","dataForPie","stepsCount","length","stepsToday","textAlign","SubscriptionClient","authToken","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","connectionParams","headers","Authorization","cache","InMemoryCache","ApolloProvider","GET_WATER_CONSUMPTION","MyWaterConsumption","useQuery","waterConsumption","float","marginLeft","GET_MY_INFO","MyInfoQuery","users","name","username","emailID","Role","App","logout","jwt_decode","email","HttpLink","log","DEFAULT_REDIRECT_CALLBACK","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","setIdToken","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","getIdTokenClaims","idTokenClaims","__raw","initAuth0","loginWithPopup","params","result","Provider","getTokenSilently","getTokenWithPopup","createBrowserHistory","Boolean","hostname","match","require","process","redirectURI","targetUrl","mainRoutes","exact","render","client_id","redirect_uri","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.68bb1fad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";","import React from 'react';\nimport { Area, AreaClosed } from '@vx/shape';\nimport { curveMonotoneX } from '@vx/curve';\nimport { scaleLinear, scaleBand } from '@vx/scale';\nimport { LinearGradient } from '@vx/gradient';\nimport { AxisBottom , AxisLeft } from '@vx/axis';\nimport { GridRows } from '@vx/grid';\n\nconst data = {\n    'newUserData':[]                   \n}\n\nfor(let i = 1; i <= 20; i++ ){ data.newUserData.push({  'Days':i+\"/Jul/20\", 'New Users': 0 }); }\ndata.newUserData.push({'Days':\"21/Jul/20\", 'New Users': 4})\ndata.newUserData.push({'Days':\"22/Jul/20\", 'New Users': 3})\ndata.newUserData.push({'Days':\"23/Jul/20\", 'New Users': 3})\nfor(let i = 24; i <= 31; i++ ){ data.newUserData.push({  'Days':i+\"/Jul/20\", 'New Users': 0 }); }\n\nconst width= 1000;\nconst height= 350;\n\nfunction LineChart() {\n    let unit = 1;\n        if(window.screen.width > 1910 && window.screen.width < 2550){\n            //for FHD Screens\n            unit = 1.5;\n        }else if(window.screen.width >= 2551){\n            //for QHD Screens\n            unit = 2;\n        }\n    const margin = { top: 20*unit, bottom: 40*unit, left: 40*unit, right: 20*unit };\n    const xMin = 0 + margin.left;\n    const xMax = width - margin.right;\n    const yMin = 0 + margin.top;\n    const yMax = height - margin.bottom;\n\n    const xAxisLable = 'Days';\n    const yAxisLable = 'New Users';\n\n    const xAxis = d =>  d[xAxisLable];\n    const yAxis = d =>  d[yAxisLable];\n\n    // scales\n    const xScale = scaleBand({\n        range: [xMin, xMax],\n        domain: data.newUserData.map(d => d['Days']),\n        nice: true\n    });\n\n    const yScale = scaleLinear({\n        range: [yMax, yMin],\n        domain: [0, 7],\n        nice: true\n    });\n    \n    return(\n        <div style={{justifyContent: 'center', display: 'flex'}}>\n            <svg width={width} height={height}>\n                <rect\n                    x=\"0\" y=\"0\" width={width} height={height}\n                    style={{\"fill\":\"white\",\"stroke\":\"#4655a3\",\"stroke-width\":\"5\",\"fill-opacity\":\"0.15\",\"stroke-opacity\":\"0.9\"}}\n                />\n                <LinearGradient from=\"rgba(249, 92, 61, 0.35)\" to=\"rgba(70, 85, 163, 0.1)\" id=\"lineChartGrad1\" vertical={true} />\n                <GridRows\n                    left={ xMin}\n                    scale={yScale}\n                    width={xMax - xMin}\n                    height={yMax}\n                    numTicks={6}\n                    style={{\"fillOpacity\":\"0.25\"}}\n                />\n                <AxisBottom\n                    top={height - margin.bottom }\n                    scale={xScale}\n                    hideAxisLine= {true}\n                    hideTicks={false}\n                    //hideZero\n                    tickLabelProps={(value, index) => ({\n                        fontSize: 10*unit,\n                        textAnchor: 'middle',\n                        fill: '#f95c3d',\n                        fillOpacity: 0.84,\n                        fontStyle: 'normal',                  \n                    })}\n                    numTicks={10}\n                    // labelProps={(value, index) => ({\n                    //     fontSize: 7*unit,\n                    //     textAnchor: 'middle',\n                    //     fill: '#4655a3',\n                    //     fontStyle: 'normal'})\n                    // }\n                    // label={xAxisLable}\n                />\n                <AxisLeft\n                    left={margin.left}\n                    scale={yScale}\n                    hideAxisLine= {true}\n                    hideTicks={true}\n                    tickLabelProps={(value, index) => ({\n                        fontSize: 10*unit,\n                        textAnchor: 'middle',\n                        fill: '#f95c3d',\n                        fillOpacity: 0.84,\n                        fontFamily: 'Nunito',\n                        fontStyle: 'normal'\n                    })}\n                    numTicks={5}\n                    labelProps={{\n                        fontSize: 15*unit,\n                        textAnchor: 'middle',\n                        fill: '#f95c3d',\n                        fillOpacity: 0.84,\n                        fontStyle: 'normal'\n                    }}\n                    label={yAxisLable}\n                    labelOffset={20*unit}\n                />\n                \n                <Area\n                    data={data.newUserData}\n                    x={d => xScale(xAxis(d))}\n                    y={d => yScale(yAxis(d))}\n                    yScale={yScale}\n                    stroke={'rgba(249, 92, 61, 0.75)'}\n                    strokeWidth={'2px'}\n                    fill={'url(#lineChartGrad1)'}\n                    curve={curveMonotoneX}\n                />\n                <AreaClosed\n                    data={data.newUserData}\n                    x={d => xScale(xAxis(d))}\n                    y={d => yScale(yAxis(d))}\n                    yScale={yScale}\n                    fill={'url(#lineChartGrad1)'}\n                    curve={curveMonotoneX}\n                />\n            </svg>\n        </div>\n    );\n}\n\nexport default LineChart;","import React from \"react\";\nimport loading from \"./loading.svg\";\nimport \"../../styles/App.css\";\n\nconst Callback = () => {\n\n  return (\n    <div className=\"logo\">\n      <img src={loading} alt=\"loading\"/>\n    </div>\n  );\n};\n\nexport default Callback;","import React from \"react\";\nimport { useAuth0 } from \"./react-auth0-spa\";\nimport { Button } from \"react-bootstrap\";\n\nconst Login = () => {\n  const { loading, loginWithRedirect } = useAuth0();\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"overlay\">\n      <div className=\"overlay-content\">\n        <div className=\"overlay-message\">Please login to continue</div>\n        <div className=\"overlay-action\">\n          <Button\n            id=\"qsLoginBtn\"\n            variant=\"primary\"\n            className=\"btn-margin loginBtn\"\n            onClick={() => {\n              loginWithRedirect({});\n            }}\n          >\n            Log In\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst LogoutBtn = ({ logoutHandler }) => (\n  <Button\n    id=\"qsLogoutBtn\"\n    variant=\"primary\"\n    className=\"btn-margin logoutBtn\"\n    onClick={logoutHandler}\n  >\n    Log Out\n  </Button>\n);\n\nexport default LogoutBtn;\n","import React from \"react\";\nimport LogoutBtn from \"./Auth/LogoutBtn\";\nimport \"../styles/App.css\"\n\nconst Header = ({ logoutHandler }) => (\n    <div className=\"header\">\n            <div className=\"logout-button\">\n                <LogoutBtn logoutHandler={logoutHandler} />\n            </div>\n            <div className=\"tagline\">\n                Fitness Tracking App\n            </div>\n    </div>\n);\n\nexport default Header;","const getRoundedRect = (x, y, width, height, radius, side='top') => {\n\tif (width <= 0) {\n\t\tradius /= 2;\n\t\t// x = x - radius;\n\t\twidth = radius;\n\t}\n\n\tif (height <= 0) {\n\t\tradius /= 2;\n\t\t// y = y - radius;\n\t\theight = radius;\n\t}\n\n\tlet d = \"\";\n\tlet t_w = width;\n\tlet b_w = width;\n\tlet h = height;\n\tlet Y = y;\n\n\tif (side === 'top') {\n\t\tt_w = width - 2*radius;\n\t\tb_w = width;\n\t\th = height - radius;\n\t\tY = y + radius;\n\t}\n\telse if (side === 'bottom') {\n\t\tt_w = width;\n\t\tb_w = width - 2*radius;\n\t\th = height - radius;\n\t}\n\telse if (side === 'left') {\n\t\tt_w = width - radius;\n\t\tb_w = width - radius;\n\t\tY = y + radius;\n\t}\n\telse if (side === 'right') {\n\t\tt_w = width - radius;\n\t\tb_w = width - radius;\n\t\th = height - 2*radius;\n\t}\n\n\td += \"M\" + x + \",\" + Y;\n\tif (side === 'top' || side === 'left') {\n\t\td += \"a\" + radius + \",\" + radius + \" 0 0 1 \" + radius + \",\" + -radius;\n\t}\n\td += \"h\" + t_w;\n\tif (side === 'top' || side === 'right') {\n\t\td += \"a\" + radius + \",\" + radius + \" 0 0 1 \" + radius + \",\" + radius;\n\t}\n\td += \"v\" + h;\n\tif (side ==='bottom' || side === 'right') {\n\t\td += \"a\" + radius + \",\" + radius + \" 0 0 1 \" + -radius + \",\" + radius;\n\t}\n\td += \"h\" + -b_w;\n\tif (side === 'bottom' || side === 'left') {\n\t\td += \"a\" + radius + \",\" + radius + \" 0 0 1 \" + -radius + \",\" + -radius;\n\t}\n\td += \"z\";\n\n\treturn d;\n};\n\nexport default getRoundedRect","import React from 'react';\nimport { Group } from '@vx/group';\nimport { GridRows, GridColumns } from '@vx/grid';\nimport { AxisBottom, AxisLeft } from '@vx/axis';\nimport { scaleLinear, scaleBand } from '@vx/scale';\nimport { LinearGradient } from '@vx/gradient';\nimport getRoundedRect from './GraphUtils';\nimport { Spring } from 'react-spring/renderprops';\n\nfunction BarGraph(props) { \n    const width = 500;  \n    const height = 300;\n    const data = props.data;\n    let unit = 1;\n        if(window.screen.width > 1910 && window.screen.width < 2550){\n            //for FHD Screens\n            unit = 1.5;\n        }else if(window.screen.width >= 2551){\n            //for QHD Screens\n            unit = 2;\n        }\n    const margin = { top: 20*unit, bottom: 25*unit, left: 40*unit, right: 10*unit };\n    const barWidth = 18*unit;\n    const borderRad = 4*unit;\n    \n    const xMin = margin.left\n    const yMin = margin.top;\n    const xMax = width - margin.right;\n    const yMax = height - margin.bottom;\n\n    const x = d => d.week;\n    const y = d => d.waterLtr;\n    \n\n    const xScale = scaleBand({\n        rangeRound: [xMin, xMax],\n        domain: data.map(x),\n    });\n        \n    const yScale = scaleLinear({\n        rangeRound: [yMax, yMin],\n        domain: [0, 25],\n    });\n\n    const compose = (scale, accessor) => data => scale(accessor(data));\n    const xPoint = compose(xScale, x);\n    const yPoint = compose(yScale, y);\n\n  return (\n    <div style={{justifyContent: 'center', display: 'flex'}}>\n    <svg width={width} height={height}>\n        <rect\n            x=\"0\" y=\"0\" width={width} height={height}\n            style={{\"fill\":\"white\",\"stroke\":\"#4655a3\",\"stroke-width\":\"5\",\"fill-opacity\":\"0.15\",\"stroke-opacity\":\"0.9\"}}\n        />\n        <text  x = {width/2} y = {12*unit}\n            style={{ fontSize: 12*unit,\n                textAnchor: 'middle',\n                fill: '#f95c3d',\n                fillOpacity: 0.84,\n                fontStyle: 'normal' }}\n        >\n            Water Consumption (Weekly Trend)\n        </text>\n        <LinearGradient from=\"rgba(249, 92, 61, 0.75)\" to=\"rgba(249, 92, 61, 0.5)\" id=\"lineChartGrad1\" vertical={true} />\n            <GridRows\n                left={margin.left}\n                scale={yScale}\n                width={xMax - xMin}\n                height={yMax - yMin}\n                stroke=\"#EAECF3\"\n                numTicks={6}\n            />\n            <GridColumns\n                top={margin.top}\n                scale={xScale}\n                width={xMax - xMin}\n                height={yMax - yMin}\n                stroke=\"#EAECF3\"\n                numTicks={6}\n            />\n        <line x1={xMax} x2={xMax} y1={yMin} y2={yMax} stroke=\"#EAECF3\" />\n        <AxisLeft\n            left={margin.left}\n            scale={yScale}\n            hideAxisLine= {true}\n            hideTicks={true}\n            hideZero={false}\n            tickLabelProps={(value, index) => ({\n                fontSize: 10*unit,\n                textAnchor: 'end',\n                verticalAnchor: 'middle',\n                fill: '#f95c3d',\n                fillOpacity: 0.84,\n                fontFamily: 'Nunito',\n                fontStyle: 'normal'\n            })}\n            label={\"Liters of Water\"}\n            labelProps={{\n                fontSize: 12*unit,\n                textAnchor: 'middle',\n                fill: '#f95c3d',\n                fillOpacity: 0.84,\n                fontStyle: 'normal'\n            }}\n            labelOffset={20*unit}\n            numTicks={4}\n        /> \n        <AxisBottom\n            top={height - margin.bottom }\n            left={0}\n            scale={xScale}\n            hideAxisLine= {true}\n            hideTicks={true}\n            tickLabelProps={(value, index) => ({\n                fontSize: 8*unit,\n                textAnchor: 'middle',\n                fill: '#f95c3d',\n                fillOpacity: 0.84,\n                fontFamily: 'Nunito',\n                fontStyle: 'normal',\n                width: 96\n            })}\n        />\n\n        {data.map((d, i) => {\n            const barHeight = yMax - yPoint(d);\n            return (\n                <Group key={`bar-${i}`}>\n                    <Spring\n                        delay={i*750}\n                        config={{duration: 750}}\n                        from={{ value: getRoundedRect(xPoint(d) + (xScale.bandwidth() - barWidth)/2 , yMax , barWidth, 0, 0, 'top') }}\n                        to={{ value: getRoundedRect(xPoint(d) + (xScale.bandwidth() - barWidth)/2 , yPoint(d), barWidth, barHeight, borderRad, 'top') }}\n                    >\n                        {props => \n                            <path\n                                id={`bar-${i}`}\n                                d={props.value}\n                                style={{ fill: 'url(#lineChartGrad1)' }}\n                            />\n                        }\n                    </Spring>\n                </Group>\n            );\n        })}\n    </svg>\n    </div>\n  );\n}\n\nexport default BarGraph;","import React from 'react';\nimport { Pie } from '@vx/shape'\nimport { Group } from '@vx/group'\nimport { LinearGradient } from '@vx/gradient';\nimport { Spring } from 'react-spring/renderprops';\n\nconst colorInnerBar = '#F1EFF8';\n\n\nfunction PieChart(props) {\n    const width = 300;  \n    const height = 300; \n    const margin = { top: 0, bottom: 0, left: 0, right: 0 };\n    const radius = Math.min(width,height)/2\n    const centerY = height / 2;\n    const centerX = width / 2;\n    const progressText = String(props.data);\n    let translationPosition = \"translate(\" + width/10 + \",\" + height/12 + \")\";\n    const radiusOuterGradient = radius;\n    let radiusOuterGrey = radius;\n    let fontSizeNumber = width/4.5;\n    let fontSizePercent = width/8.5;\n    if (width < 110){\n        radiusOuterGrey = radiusOuterGradient;\n        fontSizeNumber += 3\n        fontSizePercent += 2\n    }if (width < 110 && (props.data >= 1000)){\n        translationPosition = \"translate(\" + width/6 + \",\" + height/12 + \")\";\n    }\n\n    \n    return (\n        <div style={{justifyContent: 'center', display: 'flex'}}>\n        <svg width={width} height={height} >\n        <LinearGradient from=\"rgba(249, 92, 61, 0.75)\" to=\"rgba(249, 92, 61, 0.5)\" id=\"lineChartGrad1\" vertical={false} />\n            <Group top={centerY - margin.top} left={centerX}>\n            <Spring\n                config={{ duration: 2500 }}\n                from={{ value : 0 }}\n                to={{ value: props.data }}\n            >\n            {transform =>\n                <>\n                <g fill={'#2F4585'} fontFamily={'Nunito'} transform={translationPosition}>\n                    <text \n                        text-anchor=\"end\"\n                        fontWeight={'600'}\n                        fontSize={fontSizeNumber} \n                    >\n                        {Math.floor(transform.value)}\n                    </text>\n                </g>\n                <Pie\n                    data={[1]}\n                    outerRadius={radiusOuterGradient-4}\n                    innerRadius={radius - 6}\n                    padAngle={0}\n                    fill={colorInnerBar}\n                />\n                \n                <Pie\n                    data={[transform.value, 1000-transform.value]}\n                    outerRadius={radiusOuterGrey}\n                    innerRadius={radius - 10}\n                    cornerRadius={5}\n                    padAngle={0}\n                    pieSort={null}\n                >\n                    {pie => {\n                        return pie.arcs.map((arc, i) => {\n                        const opacity = [1,0];\n                        return (\n                            <g key={`progress-${i}`}  >\n                                <path d={pie.path(arc)} fill={`url(#lineChartGrad1)`} fillOpacity={opacity[i]} />\n                            </g>\n                        );\n                        });\n                    }}   \n                </Pie>\n                </>\n            }\n            </Spring>\n            </Group>\n        </svg>\n        </div>\n    );\n}\n\nexport default PieChart;","import React from \"react\";\nimport { useSubscription, gql } from \"@apollo/client\";\nimport \"../styles/App.css\"\nimport PieChart from './Graphs/PieChart'\n\n\nconst MyStepsCount = ({idToken}) => {\n\tconst { loading, error, data } = useSubscription(\n\t\tgql`\n\t\tsubscription{\n\t\t\tstepsCount{\n\t\t\t\tstepsToday\n\t\t\t}\n\t\t}`\n\t);\n\n\tif (loading) {\n\t\treturn <div className=\"message\">Loading...</div>;\n\t}\n\tif (error) {\n\t\tconsole.error(error);\n\t\treturn <div>Error!</div>;\n\t}\n\tlet stepsCountDisplay = \"\" , dataForPie = 0;\n\tif(data.stepsCount.length > 0){\n\t\tstepsCountDisplay = \"Your Steps Count Today: \"+data.stepsCount[0].stepsToday;\n\t\tdataForPie = data.stepsCount[0].stepsToday;\n\t}else{\n\t\tstepsCountDisplay = \"No Step Count Data Present for today\"\n\t}\n\t\n    return(\n        <div>\n\t\t\t<div className=\"message\" style={{textAlign:\"center\"}}>\n\t\t\t\t{\n\t\t\t\t\tstepsCountDisplay\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<br/>\n\t\t\t<PieChart data={dataForPie}/>\n        </div>\n    )\n};\n\nexport default MyStepsCount;\n\n\n\n","import React, { useEffect, Fragment, useState } from \"react\";\nimport \"../styles/App.css\"\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport MyStepsCount from \"./MyStepsCount\"\n\nconst createApolloClient = (authToken) => {\n    return new ApolloClient({\n     link: new WebSocketLink({\n       uri: 'wss://relaxed-pig-38.hasura.app/v1/graphql',\n       options: {\n         reconnect: true,\n         connectionParams: {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n         }\n       }\n      }),\n      cache: new InMemoryCache(),\n    });\n};\n\n\nconst SubscriptionClient = ({ idToken }) => {\n  const client = createApolloClient(idToken);\nreturn (\n    <ApolloProvider client={client}>\n        <div className = \"overlay-message\">\n          <MyStepsCount />\n        </div>\n\t</ApolloProvider>\n);\n};\n\n\nexport default SubscriptionClient;","import React from \"react\";\nimport { gql } from '@apollo/client';\nimport { useQuery } from '@apollo/client';\nimport BarGraph from './Graphs/BarGraph'\nimport MyStepsCount from './MyStepsCount'\nimport \"../styles/App.css\"\nimport SubscriptionClient from \"./SubscriptionClient\";\n\nconst GET_WATER_CONSUMPTION = gql`\nquery{\n    waterConsumption{\n        week,\n        waterLtr\n    }\n}`;\n\nconst MyWaterConsumption = ({idToken}) => {\n\tconst { loading, error, data } = useQuery(GET_WATER_CONSUMPTION);\n\n\tif (loading) {\n\t\treturn <div className=\"message\">Loading...</div>;\n\t}\n\tif (error) {\n\t\tconsole.error(error);\n\t\treturn <div>Error!</div>;\n\t}\n\t\n\t//For normalUser\n    return(\n        <div>\n        <table className=\"message\">\n            <tr><th>Week</th><th>Amount of Water</th></tr>\n            {data.waterConsumption.map((i, key) => {\n                return (\n                    <tr key={key} className=\"message\">\n                        <td>{i.week}</td>\n                        <td>{i.waterLtr} ltr.</td>\n                    </tr>\n            );})\n            }\n        </table>\n        <br/>\n        <div style={{float:\"left\", marginLeft:\"20\"}}>\n            <BarGraph data = {data.waterConsumption}/>\n        </div>\n        <div >\n            <SubscriptionClient idToken={idToken}/>\n        </div>\n        </div>\n    )\n};\n\nexport default MyWaterConsumption;","import React from \"react\";\nimport { gql } from '@apollo/client';\nimport { useQuery } from '@apollo/client';\nimport LineChart from './Graphs/LineChart'\nimport MyWaterConsumption from './MyWaterConsumption'\nimport \"../styles/App.css\"\n\nconst GET_MY_INFO = gql`\nquery{\n\tusers{\n\t\temailID,\n\t\tusername,\n\t\tname\n\t}\n}`;\n\nconst MyInfoQuery = ({idToken}) => {\n\tconst { loading, error, data } = useQuery(GET_MY_INFO);\n\n\tif (loading) {\n\t\treturn <div className=\"message\">Loading...</div>;\n\t}\n\tif (error) {\n\t\tconsole.error(error);\n\t\treturn <div>Error!</div>;\n\t}\n\t//For Admin\n\tif( data.users.length > 1 ){\n\t\treturn(\n\t\t\t<div>\n\t\t\t<div className=\"message\">Welcome Admin!</div><br/>\n\t\t\t<div className=\"message\">Here's the list of all users so far...</div><br/><br/>\n\t\t\t<table className=\"table\">\n\t\t\t\t<tr><th>Name</th><th>Username</th><th>EmailID</th></tr>\n\t\t\t\t{data.users.map((i, key) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={key} >\n\t\t\t\t\t\t\t<td>{i.name}</td>\n\t\t\t\t\t\t\t<td>{i.username}</td>\n\t\t\t\t\t\t\t<td>{i.emailID}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\n\t\t\t\t);})\n\t\t\t\t}\n\t\t\t</table>\n\t\t\t<LineChart />\n\t\t\t</div>\n\t\t)\n\t}\n\t//For normalUser\n\tif( data.users.length <= 1 ){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className=\"message\">Welcome {data.users[0].name} ({data.users[0].emailID})</div><br/>\n\t\t\t\t<div className=\"message\">Here are your Stats...  </div><br/><br/>\n\t\t\t\t<MyWaterConsumption idToken={idToken}/>\n\t\t\t</div>\n\t\t)\n\t}\n};\n\nexport default MyInfoQuery;","import React from 'react';\nimport jwt_decode from 'jwt-decode'\nimport Header from './Header';\nimport { ApolloClient, ApolloProvider, InMemoryCache, HttpLink } from '@apollo/client';\nimport { useAuth0 } from \"./Auth/react-auth0-spa\";\nimport MyInfoQuery from \"./MyInfoQuery\";\n\n\nlet Role = 'normalUser';\nconst createApolloClient = (authToken) => {\n\treturn new ApolloClient({\n\t\tlink: new HttpLink({\n\t\turi: 'https://relaxed-pig-38.hasura.app/v1/graphql',\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${authToken}`,\n\t\t\t'X-Hasura-Role': `${Role}`\n\t\t}\n\t\t}),\n\t\tcache: new InMemoryCache(),\n\t});\n};\n\nfunction App({ idToken }) {\n\tconst { loading,  logout } = useAuth0();\n\t\n\tconst decoded = jwt_decode(idToken);\n\tif(decoded.email === 'anandnikhil91@gmail.com'){\n\t\tRole = 'admin';\n\t}\n\n\n\tif (loading || !idToken) {\n\t\treturn <div>Loading...</div>;\n\t}\n\tconst client = createApolloClient(idToken);\n\tconsole.log(idToken);\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t<div className = \"overlay-message\">\n\t\t\t<Header logoutHandler={logout} />\n\t\t\t<MyInfoQuery idToken={idToken}/>\n\t\t</div>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\nimport Callback from './Callback';\nimport Login from './Login';\nimport App from '../App';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n  const [idToken, setIdToken] = useState(\"\");\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n        const idTokenClaims = await auth0FromHook.getIdTokenClaims();\n        setIdToken(idTokenClaims.__raw);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    const result = await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    const idTokenClaims = await auth0Client.getIdTokenClaims();\n    setIdToken(idTokenClaims.__raw);\n\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n    return result;\n  };\n\n  if (loading) {\n    return <Callback />;\n  }\n  if (!isAuthenticated) {\n    return (\n      <Auth0Context.Provider\n        value={{\n          isAuthenticated,\n          user,\n          loading,\n          popupOpen,\n          loginWithPopup,\n          handleRedirectCallback,\n          getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n          loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n          getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n          getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n          logout: (...p) => auth0Client.logout(...p)\n        }}\n      >\n        <Login />\n      </Auth0Context.Provider>\n    );\n  }\n\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n      <App idToken={idToken} />\n    </Auth0Context.Provider>\n  );\n};","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory(); ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Switch, Route, Router } from \"react-router-dom\";\nimport './index.css';\nimport { Auth0Provider } from \"./components/Auth/react-auth0-spa\";\nimport history from \"./utils/history\";\nimport * as serviceWorker from './serviceWorker';\n\nrequire('dotenv').config()\nconsole.log(process.env.NODE_ENV);\nlet redirectURI = process.env.REACT_APP_AUTH_CALLBACKURL;\nif(process.env.NODE_ENV == 'production'){\n  redirectURI = process.env.REACT_APP_AUTH_CALLBACKURL_PROD;\n}\n\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nconst mainRoutes = (\n  <HashRouter>\n    <Switch>\n      <Route\n        exact path=\"/\"\n        render={props => (\n          <Auth0Provider\n            domain={process.env.REACT_APP_AUTH_DOMAIN}\n            client_id={process.env.REACT_APP_AUTH_CLIENTID}\n            redirect_uri={redirectURI}\n            onRedirectCallback={onRedirectCallback}\n          />\n        )}\n      />\n    </Switch>\n    \n  </HashRouter>\n);\n\nReactDOM.render(mainRoutes, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}